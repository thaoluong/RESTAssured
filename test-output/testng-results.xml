<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-19T17:20:08 ICT" name="Default suite" finished-at="2023-12-19T17:20:23 ICT" duration-ms="14990">
    <groups>
    </groups>
    <test started-at="2023-12-19T17:20:08 ICT" name="Default test" finished-at="2023-12-19T17:20:23 ICT" duration-ms="14990">
      <class name="Lesson_19_12.Hamcrest_Part1">
        <test-method signature="Hamcrest_AllOf_AnyOf()[pri:0, instance:Lesson_19_12.Hamcrest_Part1@4690b489]" started-at="2023-12-19T17:20:08 ICT" name="Hamcrest_AllOf_AnyOf" finished-at="2023-12-19T17:20:12 ICT" duration-ms="4344" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path workspaces[0].name doesn't match.
Expected: (a string starting with "My1" or a string containing "Workspace1")
  Actual: My Workspace
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path workspaces[0].name doesn't match.
Expected: (a string starting with "My1" or a string containing "Workspace1")
  Actual: My Workspace

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:212)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at Lesson_19_12.Hamcrest_Part1.Hamcrest_AllOf_AnyOf(Hamcrest_Part1.java:133)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hamcrest_AllOf_AnyOf -->
        <test-method signature="Hamcrest_Assert()[pri:0, instance:Lesson_19_12.Hamcrest_Part1@4690b489]" started-at="2023-12-19T17:20:12 ICT" name="Hamcrest_Assert" finished-at="2023-12-19T17:20:14 ICT" duration-ms="1793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hamcrest_Assert -->
        <test-method signature="Hamcrest_ContainInAnyOrder()[pri:0, instance:Lesson_19_12.Hamcrest_Part1@4690b489]" started-at="2023-12-19T17:20:14 ICT" name="Hamcrest_ContainInAnyOrder" finished-at="2023-12-19T17:20:16 ICT" duration-ms="1663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hamcrest_ContainInAnyOrder -->
        <test-method signature="Hamcrest_Contains_Method()[pri:0, instance:Lesson_19_12.Hamcrest_Part1@4690b489]" started-at="2023-12-19T17:20:16 ICT" name="Hamcrest_Contains_Method" finished-at="2023-12-19T17:20:17 ICT" duration-ms="1725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hamcrest_Contains_Method -->
        <test-method signature="Hamcrest_HasSize()[pri:0, instance:Lesson_19_12.Hamcrest_Part1@4690b489]" started-at="2023-12-19T17:20:17 ICT" name="Hamcrest_HasSize" finished-at="2023-12-19T17:20:19 ICT" duration-ms="1794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hamcrest_HasSize -->
        <test-method signature="Hamcrest_IsNotEmpty()[pri:0, instance:Lesson_19_12.Hamcrest_Part1@4690b489]" started-at="2023-12-19T17:20:19 ICT" name="Hamcrest_IsNotEmpty" finished-at="2023-12-19T17:20:21 ICT" duration-ms="1907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hamcrest_IsNotEmpty -->
        <test-method signature="Hamcrest_matching()[pri:0, instance:Lesson_19_12.Hamcrest_Part1@4690b489]" started-at="2023-12-19T17:20:21 ICT" name="Hamcrest_matching" finished-at="2023-12-19T17:20:23 ICT" duration-ms="1725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hamcrest_matching -->
      </class> <!-- Lesson_19_12.Hamcrest_Part1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
